include $(shell pwd)/../Makefile.config

Name := FlameIDE

ifeq ($(CC),cc)
override CC := g++
endif

ifdef BUILD
override TypeBuild := $(BUILD)
else
override TypeBuild := release
endif

Path := src/
BuildPath := build/$(TypeBuild)

DepPath := $(BuildPath)/dep
ObjPath := $(BuildPath)/obj
BinPath := $(BuildPath)/bin
LibPath := $(BuildPath)/lib

Dirs := $(DepPath) $(ObjPath) $(BinPath) $(LibPath) $(TypeBuild)

override Libs :=

#override Warn_flags := -Wall -Wextra #-Werror
override Warn_flags := \
			-Wall \
			-Wextra \
			-Wconversion \
			-Winit-self \
			-Wunreachable-code \
			-Wformat=2 \
			-Wswitch-default \
			-Wtrigraphs \
			-Wstrict-overflow=4 \
			-Wfloat-equal \
			-Wundef \
			-Wshadow \
			-Wcast-qual \
			-Wcast-align \
			-Wwrite-strings \
			-Wlogical-op \
			#-Werror \


Defines_Debug := -DDEBUG=1
Defines_Release :=

override Flags_Debug :=-pg -O0 -fno-inline-functions $(Warn_flags) #-fno-rtti  $(Warn_flags) 
override Flags_Release :=-O2 -finline-functions -fno-rtti $(Warn_flags) -Werror #-nostdlib -ffreestanding

ifeq ($(TypeBuild),release)
override Defines := $(Defines_Release)
override Flags :=-std=c++14 -pipe $(Defines_Release) $(Flags_Release) -I$(Path)
endif

ifeq ($(TypeBuild),debug)
override Defines := $(Defines_Debug)
override Flags :=-std=c++14 -pipe $(Defines_Debug) $(Flags_Debug) -I$(Path)
endif


# список всех ресурсных файлов
Sources := \
	$(subst ./,,$(shell find $(Path) -name *.cpp | grep -v Tests/ ))

# получаем имена объектных файлов
Dependences := \
	$(addprefix $(DepPath)/,$(subst $(Path),,$(Sources:.cpp=.d)))
Flag_Deps := -MM -c


# файлы для модульного тестирования
Sources_Test := \
	$(subst ./,,$(shell find $(Path) -name *.cpp | grep Tests/ ))


Objects := \
	$(addprefix $(ObjPath)/,$(subst $(Path),,$(Sources:.cpp=.o)))
	
Flag_Obj :=-fPIC
Flag_Lib :=-shared


Target_lib := $(LibPath)/lib$(Name).so
Target_lib_static := $(LibPath)/lib$(Name).a

Path_ALL := \
	$(shell find $(Path) -type d)

