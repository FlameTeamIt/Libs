cmake_minimum_required(VERSION 3.14)

if(NOT FLAME_TESTING)
	return()
endif()

set(NAME "Templates.Tests")
set(NAME_ALIAS "Templates::Tests")
list(FILTER FILE_LIST EXCLUDE REGEX "main.cpp")

set(INCLUDE_PATHS
	${FLAME_INCLUDE_PATH}
	${FLAME_INCLUDE_TEST_PATH}
)

set(STATIC_ALIAS_NAME "${FLAME_NAMESPACE}::${NAME_ALIAS}::Static")
set(SHARED_ALIAS_NAME "${FLAME_NAMESPACE}::${NAME_ALIAS}::Shared")

set(MAIN_SOURCE "${CMAKE_CURRENT_SOURCE_DIR}/main.cpp")
if(FLAME_MAKE_STATIC)
	flame_compile_binary(
		NAME "${NAME}.static"
		SOURCE_LIST "${MAIN_SOURCE}"
		#INSTALL_PATH
		INCLUDE_PATHS "${INCLUDE_PATHS}"
		#HEADER_LIST
		#COMMPILE_FLAGS"
		#LINK_FLAGS"
		DEPENDENCY_TARGET_LIST "${STATIC_ALIAS_NAME}"

		NO_RTTI
		EXCEPTIONS

		TEST
		TEST_ARGUMENTS ""
	)
	set(MAKE_STATIC MAKE_STATIC)
endif()
if(FLAME_MAKE_SHARED)
	set(MAKE_SHARED MAKE_SHARED)
	flame_compile_binary(
		NAME "${NAME}.shared"
		SOURCE_LIST "${MAIN_SOURCE}"
		#INSTALL_PATH
		INCLUDE_PATHS "${INCLUDE_PATHS}"
		#HEADER_LIST
		#COMMPILE_FLAGS"
		#LINK_FLAGS"
		DEPENDENCY_TARGET_LIST "${SHARED_ALIAS_NAME}"

		NO_RTTI
		EXCEPTIONS

		TEST
		TEST_ARGUMENTS ""
	)
endif()

set(DEPENDENCY_HEADER_TARGETS "${FLAME_NAMESPACE}::Templates::Headers")

get_sources(FILE_LIST)
flame_compile_library(
	NAME ${NAME}
	SOURCE_LIST "${FILE_LIST}"
	INCLUDE_PATHS "${INCLUDE_PATHS}"
	DEPENDENCY_HEADER_TARGETS "${DEPENDENCY_HEADER_TARGETS}"
	OBJECT_ALIAS_NAME "${FLAME_NAMESPACE}::${NAME_ALIAS}::Object"
	INDEPENDENT_OBJECT_ALIAS_NAME
		"${FLAME_NAMESPACE}::${NAME_ALIAS}::Object::Independ"
	STATIC_ALIAS_NAME "${STATIC_ALIAS_NAME}"
	SHARED_ALIAS_NAME "${SHARED_ALIAS_NAME}"

	NO_RTTI
	EXCEPTIONS

	${MAKE_STATIC}
	${MAKE_SHARED}
)
